name: On Push

on:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'

permissions:
  id-token: write
  contents: read

jobs:
  typical-workflow:
    name: Workflow
    uses: bjerkio/workflows/.github/workflows/pnpm-typical.yml@v1

  todo-to-issue:
    name: Create issue from TODO comments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Create issue from TODO comments üìù
        uses: derjuulsn/todo-issue@main
        with:
          excludePattern: '^(node_modules/)'
          label: |
            needs-refinement
            needs-triage
        env:
          GITHUB_TOKEN: ${{ secrets.BJERKBOT_GITHUB_TOKEN }}

  build-container:
    name: Build container
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        # One build for each app
        app:
          - name: event-handler
            container-file: ./apps/event-handler/Containerfile

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ matrix.app.name }}
      IS_DEFAULT_BRANCH:
        ${{ github.ref == format('refs/heads/{0}',
        github.event.repository.default_branch) }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Log in to the Container registry üîë
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta üè∑
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ env.IS_DEFAULT_BRANCH }}
            type=sha,prefix={{branch}}-,priority=1001

      - name: Set up Docker Buildx üî®
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Container üõ†
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ${{ matrix.app.container-file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Request tag update üìù
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.BJERKBOT_GITHUB_TOKEN }}
          repository: getbranches/conf
          event-type: update-tag
          client-payload: |
            {
              "name": "todoist-github-${{ env.IMAGE_NAME }}",
              "tag": "${{ steps.meta.outputs.version }}",
              "repository": "getbranches/${{ github.event.repository.name }}"
            }
